name: Lint & Test

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-test:
    runs-on: ubuntu-latest
    env:
      # Configure pip to cache dependencies
      PIP_NO_CACHE_DIR: false

      # Make sure package manager does not use virtualenv
      POETRY_VIRTUALENVS_CREATE: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup python
        id: python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      # Install our dependencies
      - name: Install dependencies using poetry
        run: |
          pip install poetry
          poetry install

      # We will not run `flake8`, `black`, or `isort` here, as we will use a
      # separate actions. As pre-commit does not support user installs, we set
      # PIP_USER=0 to not do a user install.
      - name: Run pre-commit hooks
        run: SKIP=flake8,black,isort pre-commit run --all-files

      # Run flake8 and have it format the linting errors in the format of
      # the GitHub Workflow command to register error annotations. This
      # means that our flake8 output is automatically added as an error
      # annotation to both the run result and in the "Files" tab of a
      # pull request.
      #
      # Format used:
      # ::error file={filename},line={line},col={col}::{message}
      - name: Run flake8
        run: "flake8 --extend-exclude=.cache/ \
        --format=\"::error file=%(path)s,line=%(row)d,col=%(col)d::\
        [flake8] %(path)s %(row)d:%(col)d: %(code)s: %(text)s\""

      # Run Black using it's provided GitHub action
      - name: Run Black
        uses: psf/black@stable
        with:
          options: "--check --diff"

      # Run isort using it's provided GitHub action
      - name: Run isort
        uses: jamescurtin/isort-action@master
        with:
          configuration: "--gitignore --check --diff"
